namespace Blog.Data.Mappings;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

/*  
    @author Winpenning
    FluentMapping for the User model ('-')
*/

/* the FluentMapping need to implement the 
   IEntityTypeConfiguration<T> interface
*/
public class UserMap : IEntityTypeConfiguration<User>
{
    public void Configure(EntityTypeBuilder<User> builder)
    {
        // configure the table
        builder.ToTable("User");

        // defines the primary key using a lambda function
        builder.HasKey(x=>x.Id);

        // the Id will be generated by the code every time we add a new User
        builder.Property(x=>x.Id)
        .ValueGeneratedOnAdd()
        .UseIdentityColumn(); // Identity (1,1)

        builder.Property(x=>x.Name)
        .IsRequired()
        .HasColumnName("Name")
        .HasColumnType("NVARCHAR")
        .HasMaxLength(200);

        builder.Property(x=>x.Email)
        .IsRequired()
        .HasColumnName("Email")
        .HasColumnType("NVARCHAR")
        .HasMaxLength(200);

        builder.Property(x=>x.Bio)
        .IsRequired()
        .HasColumnName("Bio")
        .HasColumnType("NVARCHAR")
        .HasMaxLength(2000);

        builder.Property(x=>x.Image)
        .IsRequired()
        .HasColumnName("Image")
        .HasColumnType("NVARCHAR")
        .HasMaxLength(500);

        builder.Property(x=>x.PasswordHash)
        .IsRequired()
        .HasColumnName("PasswordHash")
        .HasColumnType("NVARCHAR")
        .HasMaxLength(50);

        builder.Property(x=>x.Slug)
        .IsRequired()
        .HasColumnName("Slug")
        .HasColumnType("NVARCHAR")
        .HasMaxLength(80);

        // Index
        builder.HasIndex(x=>x.Slug, "IX_Category_Slug")
        .IsUnique();
    }
}